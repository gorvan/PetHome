// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetHome.Disscusions.Infrastructure.DbContexts;

#nullable disable

namespace PetHome.Disscusions.Infrastructure.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20250119120546_initial_write")]
    partial class initial_write
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetHome.Disscusions.Domain.Disscusion", b =>
                {
                    b.Property<Guid>("DisscusionId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("RelationId")
                        .HasColumnType("uuid")
                        .HasColumnName("relation_id");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.Property<string>("Users")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("users");

                    b.HasKey("DisscusionId")
                        .HasName("pk_disscusions");

                    b.ToTable("disscusions", (string)null);
                });

            modelBuilder.Entity("PetHome.Disscusions.Domain.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_at");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("boolean")
                        .HasColumnName("is_edited");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<Guid?>("disscusion_id")
                        .HasColumnType("uuid")
                        .HasColumnName("disscusion_id");

                    b.HasKey("MessageId")
                        .HasName("pk_messages");

                    b.HasIndex("disscusion_id")
                        .HasDatabaseName("ix_messages_disscusion_id");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("PetHome.Disscusions.Domain.Message", b =>
                {
                    b.HasOne("PetHome.Disscusions.Domain.Disscusion", null)
                        .WithMany("Messages")
                        .HasForeignKey("disscusion_id")
                        .HasConstraintName("fk_messages_disscusions_disscusion_id");
                });

            modelBuilder.Entity("PetHome.Disscusions.Domain.Disscusion", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
